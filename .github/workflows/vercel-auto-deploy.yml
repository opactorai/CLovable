name: Vercel Auto Deploy (Preview & Prod)

on:
  push:
    branches: ["**"]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    if: github.event_name == 'pull_request' || github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Info (preview)
        run: vercel pull --yes --environment=preview --token "$VERCEL_TOKEN" --cwd apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build (preview)
        run: vercel build --token "$VERCEL_TOKEN" --cwd apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy (preview)
        id: deploy_preview
        run: |
          url=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN" --cwd apps/web --yes)
          echo "preview_url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Output Preview URL
        run: echo "Preview URL: ${{ steps.deploy_preview.outputs.preview_url }}"

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Info (production)
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN" --cwd apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build (production)
        run: vercel build --token "$VERCEL_TOKEN" --cwd apps/web
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy (production)
        id: deploy_prod
        run: |
          url=$(vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN" --cwd apps/web --yes)
          echo "prod_url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Output Production URL
        run: echo "Production URL: ${{ steps.deploy_prod.outputs.prod_url }}"

